% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cases_within_radius.R
\name{cases_within_radius}
\alias{cases_within_radius}
\title{Check Cases Within Radius}
\usage{
cases_within_radius(
  data,
  radius_km = 10,
  minimum_cases = 10,
  column_count = NULL,
  ...
)
}
\arguments{
\item{data}{data set containing a column 'postcode'}

\item{radius_km}{radius in kilometres from each zip code. The search \verb{*diameter*} is twice this number (since zip codes e.g. to the west and to the east are searched).}

\item{minimum_cases}{minimum number of cases to search for}

\item{column_count}{column name in \code{data} with the number of case counts}

\item{...}{ignored, allows for future extensions}
}
\description{
Based on the \link{postcodes4_afstanden} data set, this function determines the specified minimum number of cases within a certain radius.
}
\examples{
library(dplyr)
postcodes_drenthe <- postcodes \%>\% 
  filter(postcode > 999, provincie == "Drenthe") \%>\% 
  pull(postcode)

noro <- data.frame(postcode = postcodes_drenthe,
                   n = floor(runif(length(postcodes_drenthe),
                                   min = 0, max = 3)))
head(noro)

radial_check <- cases_within_radius(noro, radius_km = 10, minimum_cases = 10)
head(radial_check)

if (require("certeplot2")) {

  radial_check \%>\%
    add_map() \%>\%
    filter_geolocation(provincie == "Drenthe") \%>\%
    plot2(category = cases_within_range,
          category.title = "Cases",
          datalabels = FALSE,
          colour_fill = "viridis")

}
}
